{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Documents/workout-files/insta-profile/src/components/body/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../features/postSlice\";\nimport { Container, Post, PostBtn, Posts } from \"./Body.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [postImg, setPostImg] = useState(null);\n  const posts = useSelector(store => store.post);\n  const dispatch = useDispatch();\n  const postHandler = e => {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      setPostImg(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) : null, /*#__PURE__*/_jsxDEV(PostBtn, {\n      htmlFor: \"post\",\n      onClick: () => setOpen(true),\n      children: \"New post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      id: \"post\",\n      onChange: postHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          src: post.PostImg,\n          alt: \"post\"\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"pdUQ7lPuAK8Bh61+zPyzefSmJWc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setPost","Container","Post","PostBtn","Posts","Body","open","setOpen","postImg","setPostImg","posts","store","post","dispatch","postHandler","e","preventDefault","target","files","URL","createObjectURL","display","map","PostImg","id"],"sources":["/home/santhosh/Documents/workout-files/insta-profile/src/components/body/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../features/postSlice\";\nimport { Container, Post, PostBtn, Posts } from \"./Body.styled\";\n\nconst Body = () => {\n    const [open, setOpen] = useState(false)\n  const [postImg, setPostImg] = useState(null);\n  const posts = useSelector((store) => store.post);\n  const dispatch = useDispatch();\n  const postHandler = (e) => {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      setPostImg(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  return (\n    <Container>\n        { open ? <>\n        <button >post</button>\n        </> : null}\n      <PostBtn\n        htmlFor=\"post\"\n        onClick={() =>\n          setOpen(true)\n        }\n      >\n        New post\n      </PostBtn>\n      <input\n        style={{ display: \"none\" }}\n        type=\"file\"\n        id=\"post\"\n        onChange={postHandler}\n      />\n      <Posts>\n        {posts.map((post) => {\n            return <Post key={post.id} src={post.PostImg} alt=\"post\" />;\n        })}\n      </Posts>\n    </Container>\n  );\n};\n\nexport default Body;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,QAAQ,eAAe;AAAC;AAAA;AAEhE,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,KAAK,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAChD,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAID,CAAC,CAACE,MAAM,CAACC,KAAK,IAAIH,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACvCT,UAAU,CAACU,GAAG,CAACC,eAAe,CAACL,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EACD,oBACE,QAAC,SAAS;IAAA,WACJZ,IAAI,gBAAG;MAAA,uBACT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAsB,iBACnB,GAAG,IAAI,eACZ,QAAC,OAAO;MACN,OAAO,EAAC,MAAM;MACd,OAAO,EAAE,MACPC,OAAO,CAAC,IAAI,CACb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGO,eACV;MACE,KAAK,EAAE;QAAEc,OAAO,EAAE;MAAO,CAAE;MAC3B,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,MAAM;MACT,QAAQ,EAAEP;IAAY;MAAA;MAAA;MAAA;IAAA,QACtB,eACF,QAAC,KAAK;MAAA,UACHJ,KAAK,CAACY,GAAG,CAAEV,IAAI,IAAK;QACjB,oBAAO,QAAC,IAAI;UAAe,GAAG,EAAEA,IAAI,CAACW,OAAQ;UAAC,GAAG,EAAC;QAAM,GAAtCX,IAAI,CAACY,EAAE;UAAA;UAAA;UAAA;QAAA,QAAkC;MAC/D,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEhB,CAAC;AAAC,GArCInB,IAAI;EAAA,QAGMN,WAAW,EACRD,WAAW;AAAA;AAAA,KAJxBO,IAAI;AAuCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}